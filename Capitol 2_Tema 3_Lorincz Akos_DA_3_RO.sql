-- Advanced SQL knowledge applied with the use of several CTEs and Join functions in order to
-- present data for marketing campaigns from 2 different sources, those being from Facebook and Google 
WITH FACEBOOK_DATA AS(
SELECT
	FBD.AD_DATE,
	FCC.CAMPAIGN_NAME,
	FBD.SPEND,
	FBD.IMPRESSIONS,
	FBD.REACH,
	FBD.CLICKS,
	FBD.LEADS,
	FBD.VALUE
FROM
	FACEBOOK_ADS_BASIC_DAILY FBD
LEFT JOIN FACEBOOK_ADSET FBA 
ON
	FBD.ADSET_ID = FBA.ADSET_ID
LEFT JOIN FACEBOOK_CAMPAIGN FCC 
ON
	FCC.CAMPAIGN_NAME = FBD.CAMPAIGN_ID
),
GOOGLE_DATA AS(
SELECT
	AD_DATE,
	CAMPAIGN_NAME,
	SPEND,
	IMPRESSIONS,
	REACH,
	CLICKS,
	LEADS,
	VALUE
FROM
	GOOGLE_ADS_BASIC_DAILY
),
Combined_Data as(
select

)
select
--spend, impressions, reach, clicks, leads, value — metrics of campaigns and ad sets on the respective days
	AD_DATE,
	CAMPAIGN_NAME,
	SUM(SPEND) AS TOTAL_COST,
	SUM(IMPRESSIONS) AS NUMBER_OF_IMPRESSIONS,
	SUM(CLICKS) as NUMBER_OF_CLICKS,
	((SUM(clicks::float) / SUM(reach::float)) * 100) AS CONVERSION_RATE,
	SUM(reach) as REACH,
	SUM(Leads) as Leads,
	SUM(Value) as Value
	FROM
	(
	SELECT
		*
	FROM
		FACEBOOK_DATA
UNION ALL
	SELECT
		AD_DATE,
		CAMPAIGN_NAME,
		SPEND,
		IMPRESSIONS,
		REACH,
		CLICKS,
		LEADS,
		VALUE
	FROM
		GOOGLE_DATA) AS FACEBOOK_AND_GOOGLE_DATA
WHERE CAMPAIGN_NAME IS NOT null AND Clicks > 0
GROUP BY
	AD_DATE,
	CAMPAIGN_NAME
ORDER BY
	AD_DATE,
	CAMPAIGN_NAME


--SIMILARLY TO THE TASK IN THE PREVIOUS TOPIC, MAKE A SAMPLE FROM THE RESULTING COMBINED TABLE (CTE):
--AD_DATE — THE DATE OF THE AD'S DISPLAY
--CAMPAIGN_NAME — THE NAME OF THE CAMPAIGN
--AGGREGATED BY DATE AND CAMPAIGN ID VALUES FOR THE FOLLOWING INDICATORS:
--TOTAL COST,
--NUMBER OF IMPRESSIONS,
--NUMBER OF CLICKS,
--TOTAL CONVERSION VALUE

--BONUS
	
	WITH FACEBOOK_DATA AS(
SELECT
	FBD.AD_DATE,
	FCC.CAMPAIGN_NAME,
	FBD.SPEND,
	FBD.IMPRESSIONS,
	FBD.REACH,
	FBD.CLICKS,
	FBD.LEADS,
	FBD.VALUE,
	FBA.ADSET_NAME
FROM
	FACEBOOK_ADS_BASIC_DAILY FBD
LEFT JOIN FACEBOOK_ADSET FBA 
ON
	FBD.ADSET_ID = FBA.ADSET_ID
LEFT JOIN FACEBOOK_CAMPAIGN FCC 
ON
	FCC.CAMPAIGN_NAME = FBD.CAMPAIGN_ID
),
GOOGLE_DATA AS(
SELECT
	AD_DATE,
	CAMPAIGN_NAME,
	SPEND,
	IMPRESSIONS,
	REACH,
	CLICKS,
	LEADS,
	VALUE,
	ADSET_NAME
FROM
	GOOGLE_ADS_BASIC_DAILY
)
SELECT
CAMPAIGN_NAME,
	ADSET_NAME,
	SUM(SPEND::FLOAT) AS TOTAL_SPEND,
	((SUM(VALUE::FLOAT)-(SUM(SPEND::FLOAT)))/(SUM(SPEND::FLOAT)))*100 AS ROMI
--((VALUE/SPEND)/SPEND)*100
FROM
	(
	SELECT
	*
	FROM
		FACEBOOK_DATA
UNION ALL
	SELECT
	AD_DATE,
		CAMPAIGN_NAME,
		SPEND,
		IMPRESSIONS,
		REACH,
		CLICKS,
		LEADS,
		VALUE,
		ADSET_NAME
	FROM
		GOOGLE_DATA) AS FACEBOOK_AND_GOOGLE_DATA
WHERE CAMPAIGN_NAME IS NOT NULL AND SPEND > 0
GROUP BY
CAMPAIGN_NAME,
	ADSET_NAME
HAVING SUM(SPEND)>500000
ORDER BY
	ROMI DESC
